#include <iostream>

using namespace std;


void matrica(int v, int e, int **Arr, int **k)
{
  for(int i=0,i<v,i++)
  {
    for(int j=0,j<v,j++)
    {
      int k[i][j];
    }
  }
  for (int i=0; i<e; i++) 
  {
        k[Arr[i][0]-1][Arr[i][1]-1]=1;
        k[Arr[i][1]-1][Arr[i][0]-1]=1;
  }
}


void dfs(int v, int e)
{  int n,l
   int G[n][l];
   bool used;
   for(int i=0,i<v,i++)
   {
      if(G[v][i])&&(!used[i])
      {
         used[i]=1;
         dfs(i);
      }
   }
}


int main() {
    int v, e;
    int **Arr=new int* [e];
    for (int i=0; i<e; i++) 
    {
        Arr[i]=new int [2];
    }
        int **G=new int* [v];
        for (int i=0; i<v; i++) 
    {
        G[i]=new int [v];
    }
        matrica(v, e, Arr, G);
        bool *used=new bool[v];
        for (int i=0; i<v; i++) 
    {
        used[i]=0;
    }
    dfs(0);
    return 0;
}
